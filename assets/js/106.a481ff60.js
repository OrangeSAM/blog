(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{281:function(s,n,a){"use strict";a.r(n);var t=a(3),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[s._v("#")]),s._v(" 题目内容")]),s._v(" "),a("p",[s._v("给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。")]),s._v(" "),a("h3",{attrs:{id:"解法一，暴力破解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法一，暴力破解"}},[s._v("#")]),s._v(" 解法一，暴力破解")]),s._v(" "),a("p",[s._v("看完第一遍题目，可以非常自然的想到使用双层循环直接暴力计算。即挨个相加，判断是否等于目标值，如果等于则返回当前循环数的下标。但毫无疑问时间复杂度会比较高。")]),s._v(" "),a("p",[s._v("在暴力破解中的遇到的一个问题，最开始是直接使用两个forEach，但一直就无法通过submit。后面看了MDN文档才发现“除了抛出异常以外，没有别的办法终端forEach循环”，因此return 里的东西不会被return。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var twoSum = function (nums, target) {\n    for (let i = 0; i < nums.length; i++) {\n        for (let j = i + 1; j < nums.length; j++) {\n            if (nums[i] + nums[j] === target) {\n                return [i, j]\n            }\n        }\n    }\n    // nums.forEach((e, i) => {\n    //      nums.forEach((m, n) => {\n    //          if (e + m === target) {\n    //              return [i, n]\n    //          }\n    //      })\n    // })\n    // 除了抛出异常以外，没有办法中止或跳出 forEach() 循环。\n    // 如果你需要中止或跳出循环，forEach() 方法不是应当使用的工具。 \n    // 因此上述代码没用。\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h3",{attrs:{id:"解法二，用对象巧取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法二，用对象巧取"}},[s._v("#")]),s._v(" 解法二，用对象巧取")]),s._v(" "),a("p",[s._v("思路：目前已知target值，且给定的数组一定会存在两个有效目标值。假定循环中的数值都可能成为答案，计算出目标值与当前循环数值的差。并且把当前数值的坐标以以数值为key下表为value的对象形式保存。在后面的某次循环中总会找到一个res在obj中了。此时，obj中的那个下表和当前循环的下标就是答案。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const twoSum = (nums, target) => {\nconst obj = {}\nfor (let i = 0, len = nums.length; i < len; ++i) {\n        const data = nums[i]\n        const res = target - data\n        if (res in obj) {\n            return [obj[res], i]\n        }\n        obj[data] = i\n        console.log(i)\n    }\n}\ntwoSum([7, 2, 11, 16], 9)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);